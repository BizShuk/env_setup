user shuk;

worker_processes  1;    # with core number , or auto

#worker_cpu_affinity cpumask
# ex:
# worker_cpu_affinity 01 10 01 10 01 10 01 10;  # 2 cpu for 8 workers
# worker_cpu_affinity 10000000 010000000;  # 8 cpu for 2 workers


#worker_priority nice #定义work进程的优先级，数字越小优先级越高


daemon on;

#error_log file | stderr |  syslog:server=address[,parameter=value] | memory:size [debug | info | notice | warn | error | crit | alert | emerg]
error_log  logs/nginx.error.log debug;

# pid
pid        logs/nginx.pid;

#worker_rlimit_nofile 2024;     # open file number for each worker

events {
    use epoll;                  # 指明并发连接请求处理时使用的方法
    worker_connections  8096;   # 每个worker进程所能够并发打开的最大连接
    #multi_accept on;
    #accept_mutex on | off 启用时，表示用于让多个worker轮流地、序列化地响应新请求


}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/nginx.access.log  main;
    access_log  off;

    sendfile        on;
    tcp_nopush      on;     #?
    tcp_nodelay     on;     # 对keepalived模式下的连接是否启用TCP_NODELAY选项
    
    # for security reason to hide nginx and version in server response
    server_tokens   off;

    keepalive_timeout  15;

    gzip  on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "MSIE [1-6]\.";
    #gzip_disable "msie6";

    # client buffer size 
    #client_body_buffer_size      128k;
    #client_max_body_size         10m;
    #client_header_buffer_size    1k;
    #large_client_header_buffers  4 4k;
    #output_buffers               1 32k;
    #postpone_output              1460;

    # client timeout
    #client_header_timeout  3m;
    #client_body_timeout    3m;
    #send_timeout           3m;

    # static cacher
    #open_file_cache max=1000 inactive=20s;         # cache 1000 files, excluding files have not been accessed in 20 secs
    #open_file_cache_valid 30s;                     # cache for 30 secs
    #open_file_cache_min_uses 5;                    # only have 5 times or more
    #open_file_cache_errors off;


    # server {
    #       location:
    #            ：會將matched整段path附上
    #           =：URI精确匹配；
    #           ~：做正则表达式模式匹配，区分字符大小写；
    #           ~*：做正则表达式模式匹配，不区分字符大小写；
    #           ^~：对URI的左半部分做匹配检查，不区分字符大小写；
    #
    #           匹配优先级：=、^~、~/～*、不带符号；
    #
    #       alias path , direct as other location
    #
    #
    # }

    # turn into HTTPS by error page , and plus a test page
    server {
        listen      80;
        server_name shuk.info t.shuk.info;
        # 導向至 HTTPS
        #   rewrite ^(.*) https://$host$1 permanent;
        root /home/shuk/server/bizshuk.github.io;

        # personal testing site 
        location / {
            index index.html index.php index.htm;
        }


    }

    # test
    server {
        listen      80;
        server_name test.t.shuk.info test.shuk.info;

        root /home/shuk/server/test;

        # redirect to HTTPS
        location / {  
            index index.html index.php index.html;
        }
    }

    # slURL
    server {
        listen      80;
        server_name slURL.t.shuk.info slURL.shuk.info;

        # redirect to HTTPS
        location / {  
            proxy_pass http://slURL;
        }
    }

    # slURL , for redirect
    server {
        listen      80;
        server_name l.t.shuk.info l.shuk.info;

        # redirect to HTTPS
        location / {  
            proxy_pass http://l/url/;
        }
    }

    upstream slURL {
        server  127.0.0.1:7000 weight=1;
    }

    upstream l {
        server 127.0.0.1:7000 weight=1;
    }

    server {
        listen      80;
        server_name podcast.shuk.info podcast.t.shuk.info;

        root /home/shuk/server/podcast;

        # redirect to HTTPS
        location / {  
            index index.html index.php index.html;
        }
    }


    # Video Channel
    server {
        listen      80;
        server_name videochannel.shuk.info videochannel.t.shuk.info;

        root /home/shuk/server/VideoChannel;

        location ~ /api/.*\.php {
            include fastcgi.conf;
            include fastcgi_params;
            # With php7.0-cgi alone:
            fastcgi_pass 127.0.0.1:9000;
            # With php7.0-fpm:
            #fastcgi_pass unix:/run/php/php7.0-fpm.sock;
            

        }

        location / {
            index   index.html index.htm;
        }


        # Must have in each server brace below
        # ====================================
        error_page  500 501 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
        
        # static file cache
        location ~* .(jpg|jpeg|png|gif|ico|css|js|xml)$ {
            access_log      off;
            log_not_found   off;
            expires 365d;
        }

        location ~ /\. {
            access_log off;
            log_not_found off;
            deny all;
        }
        
    
    }



    server {
        # default enable ipv6 and ipv4 
        # requirements:
        # - --with-ipv6
        #
        #listen      [::]:9999; 
        #listen      [::]:9999 default ipv6only=on; # enable ipv6 only
        listen       80;
        server_name  static.shuk.info static.t.shuk.info;

        #charset koi8-r;

        location / {
            root   /home/shuk/server/static;
            index  index.html index.htm;   # index.php
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy pass 
        #location / {
        #    proxy_pass http://127.0.0.1:8000;
        #    proxy_redirect          off;
        #    proxy_set_header        Host            $host;
        #    proxy_set_header        X-Real-IP       $remote_addr;
        #    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        #    client_max_body_size    10m;
        #    client_body_buffer_size 128k;
        #    proxy_connect_timeout   90;
        #    proxy_send_timeout      90;
        #    proxy_read_timeout      90;
        #    proxy_buffers           32 4k;
        #}
        #

        # static file cache
        location ~* .(jpg|jpeg|png|gif|ico|css|js|json|xml)$ {
            root /home/shuk/server/static;
            access_log      off;
            log_not_found   off;
            expires 365d;
        }


    }

    upstream big_server_com {
        server 127.0.0.3:8000 weight=5;
        server 127.0.0.3:8001 weight=5;
        server 192.168.0.1:8000;
        server 192.168.0.1:8001;
    }
    

    # HTTPS server
    
    #ssl on;    use after listen , like "listen 443 ssl"
    #ssl_certificate      ssl/slurl.shuk.info/slurl.shuk.info.pem;
    #ssl_certificate_key  ssl/slurl.shuk.info/private.key;

    #ssl_session_cache    shared:SSL:1m;
    #ssl_session_timeout  5m;

    #ssl_ciphers  HIGH:!aNULL:!MD5;
    #ssl_prefer_server_ciphers  on;
    #ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
    
    root   html;
    index  index.html index.htm;

    server {
        listen       443 ssl;
        server_name  localhost;

        location / {
        }
    }

}


#mime types
#types {
#    text/html                             html htm shtml;
#    text/css                              css;
#    text/xml                              xml rss;
#    image/gif                             gif;
#    image/jpeg                            jpeg jpg;
#    application/x-javascript              js;
#    text/plain                            txt;
#    text/x-component                      htc;
#    text/mathml                           mml;
#    image/png                             png;
#    image/x-icon                          ico;
#    image/x-jng                           jng;
#    image/vnd.wap.wbmp                    wbmp;
#    application/java-archive              jar war ear;
#    application/mac-binhex40              hqx;
#    application/pdf                       pdf;
#    application/x-cocoa                   cco;
#    application/x-java-archive-diff       jardiff;
#    application/x-java-jnlp-file          jnlp;
#    application/x-makeself                run;
#    application/x-perl                    pl pm;
#    application/x-pilot                   prc pdb;
#    application/x-rar-compressed          rar;
#    application/x-redhat-package-manager  rpm;
#    application/x-sea                     sea;
#    application/x-shockwave-flash         swf;
#    application/x-stuffit                 sit;
#    application/x-tcl                     tcl tk;
#    application/x-x509-ca-cert            der pem crt;
#    application/x-xpinstall               xpi;
#    application/zip                       zip;
#    application/octet-stream              deb;
#    application/octet-stream              bin exe dll;
#    application/octet-stream              dmg;
#    application/octet-stream              eot;
#    application/octet-stream              iso img;
#    application/octet-stream              msi msp msm;
#    audio/mpeg                            mp3;
#    audio/x-realaudio                     ra;
#    video/mpeg                            mpeg mpg;
#    video/quicktime                       mov;
#    video/x-flv                           flv;
#    video/x-msvideo                       avi;
#    video/x-ms-wmv                        wmv;
#    video/x-ms-asf                        asx asf;
#    video/x-mng                           mng;
#}
#
#
#
#










# Tengine and Nginx 
# [Tenginx used modules](http://blog.jobbole.com/100958/)



