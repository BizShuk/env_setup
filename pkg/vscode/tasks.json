{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Setup: All",
            "type": "shell",
            "command": "echo Check default setup",
            "dependsOn": [
                "Setup: ${$userHome}/.env"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "label": "Setup: ${$userHome}/.env",
            "type": "shell",
            "command": "p=${userHome}/.env; [[ ! -f $p ]] && echo profile=local > $p; echo setup"
        },
        {
            "label": "Go: Project mod init",
            "type": "shell",
            "command": "go mod init ${input:modulename}",
            "group": "build",
            "presentation": {
                "focus": true
            }
        },
        {
            "label": "Go: Project mod tidy",
            "type": "shell",
            "command": "go mod tidy",
            "group": "build"
        },
        {
            "label": "Go: Get module",
            "type": "shell",
            "command": "go get -u ${input:modulename}",
            "group": "build",
            "presentation": {
                "focus": true
            }
        },
        {
            "label": "Go: Test default",
            "type": "shell",
            "command": "go test -covermode=count  -coverprofile=out/cover.out ./... && go tool cover -func out/cover.out",
            "group": "test",
            "presentation": {
                "focus": true
            },
            "dependsOn": [
                "Go: Test All on Testing Explorer"
            ]
        },
        {
            "label": "Go: Test All on Testing Explorer",
            "type": "process",
            "command": "${command:testing.runAll}",
            "group": "test",
            "presentation": {
                "echo": false,
                "reveal": "never",
                "close": true
            }
        },
        {
            "label": "Git: generate version file from git",
            "type": "shell",
            "command": "versions=($(git tag --points-at HEAD)); versions+=($(git log --pretty=format:'%h' -n 1)); echo -n \"${versions[*]}\" > version",
            "group": "build",
            "presentation": {
                "focus": true
            }
        },
        {
            "label": "Git: Generate .pre-commit-config.yaml if not exists",
            "type": "shell",
            "command": "p=${workspaceFolder}/.pre-commit-config.yaml; [[ ! -f $p ]] && pre-commit sample-config > $p",
            "group": "build",
            "presentation": {
                "focus": true
            }
        },
        {
            "label": "Node: Upgrade version",
            "type": "shell",
            "command": "nvm install --lts",
            "presentation": {
                "close": false,
                "focus": true
            }
        }
    ],
    "inputs": [
        {
            "id": "modulename",
            "description": "Module name",
            "type": "promptString",
        }
    ]
}