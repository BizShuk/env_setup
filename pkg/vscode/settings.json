{
    "window.title": "${activeEditorFull}${separator}${rootName}",
    // [workbench]
    "workbench.startupEditor": "none",
    "workbench.editor.tabCloseButton": "right",
    "workbench.iconTheme": "material-icon-theme",
    // [explorer]
    "explorer.openEditors.visible": 0,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    // [editor]
    "editor.wordWrap": "on",
    "editor.fontSize": 14,
    "editor.autoIndent": "full",
    "editor.showFoldingControls": "always",
    "editor.find.seedSearchStringFromSelection": "selection",
    "editor.lineNumbers": "on",
    "editor.tabCompletion": "on",
    "editor.tabSize": 4,
    "editor.accessibilitySupport": "auto",
    "editor.formatOnPaste": true,
    "editor.snippetSuggestions": "top",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.fixAll": true,
        "source.organizeImports": true
    },
    "editor.comments.insertSpace": true,
    "editor.linkedEditing": true,
    // [diff editor]
    "diffEditor.ignoreTrimWhitespace": true,
    "diffEditor.codeLens": true,
    // [files]
    "files.autoSave": "off",
    "files.eol": "\n",
    "files.trimTrailingWhitespace": true,
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/.mvn": true,
        "**/target": true,
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true,
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*_test.go": true,
        "**/bin": true,
        "**/.gitlab": true,
        "**/.devops": true,
        "**/coverage": true,
        ".vscode": true
    },
    "files.watcherExclude": {
        "**/.git/**": true,
        "**/node_modules/**": true,
    },
    "files.associations": {
        "*.sh": "shellscript",
        "*.bosun": "bosun",
    },
    // [search]
    "search.exclude": {
        "**/.classpath": true,
        "**/.DS_Store": true,
        "**/.factorypath": true,
        "**/.git": true,
        "**/.hg": true,
        "**/.mvn": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.svn": true,
        "**/*.mod": true,
        "**/*.sum": true,
        "**/bower_components": true,
        "**/CVS": true,
        "**/node_modules": true,
        "**/target": true
    },
    "search.showLineNumbers": true,
    "search.collapseResults": "auto",
    // "search.smartCase": true,
    // [Launch]
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Go Launch file",
                "type": "go",
                "request": "launch",
                "mode": "debug",
                "program": "${file}",
                "envFile": "${userHome}/.env",
            },
            {
                "name": "Go Launch Project",
                "type": "go",
                "request": "launch",
                "mode": "debug",
                "program": "${workspaceFolder}",
                "envFile": "${userHome}/.env",
            },
            {
                "name": "Launch Chrome",
                "request": "launch",
                "type": "chrome",
                "url": "http://localhost:3000",
                "webRoot": "${workspaceFolder}"
            }
        ],
        "compounds": []
    },
    // [debug]
    "debug.toolBarLocation": "floating",
    "debug.console.fontSize": 14,
    // [terminal]
    "terminal.integrated.fontSize": 14,
    // [git]
    "git.enableSmartCommit": true,
    "git.showPushSuccessNotification": true,
    "git.autofetch": true,
    "git.fetchOnPull": true,
    "git.autoStash": true,
    "git.confirmSync": false,
    "git.followTagsWhenSync": true,
    "git.pruneOnFetch": true,
    "git.untrackedChanges": "separate",
    "git.autofetchPeriod": 1800,
    "git.ignoreSubmodules": true,
    "git.detectSubmodules": false,
    // [go]
    "go.toolsManagement.autoUpdate": true,
    "go.buildOnSave": "package",
    "go.useLanguageServer": true,
    "[go]": {
        "editor.insertSpaces": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        }
    },
    "gopls": {
        "formatting.gofumpt": false,
    },
    // "go.lintTool": "golangci-lint", // [go linter]
    "go.lintFlags": [
        "--fast"
    ],
    "go.formatTool": "goimports",
    // [go test]
    "go.testOnSave": true,
    "go.testExplorer.showOutput": false,
    // [go cover]
    "go.coverShowCounts": true,
    "go.coverOnSave": true,
    "go.coverOnSingleTest": true,
    "go.coverageOptions": "showBothCoveredAndUncoveredCode",
    "go.coverOnSingleTestFile": false,
    "go.coverOnTestPackage": false,
    // "go.coverMode": "count", // ???
    "go.coverageDecorator": {
        "type": "gutter",
        "coveredGutterStyle": "blockblue",
        "uncoveredGutterStyle": "slashred"
    },
    // [javascript] [npm] [node] [typescript] [js]
    "javascript.updateImportsOnFileMove.enabled": "always",
    "eslint.options": {
        "rules": {
            "no-console": false
        }
    },
    // [Markdown]
    "markdown.copyFiles.destination": {
        "**/*": "assets/images/md/${documentBaseName}"
    },
    "markdownlint.config": {
        "default": true,
        "MD001": false,
        "MD009": {
            "br_spaces": 2
        },
        "MD028": false,
        "MD029": false,
        "MD045": false,
        "MD053": false,
        "SA9003": false
    },
    "[markdown]": {
        "files.trimTrailingWhitespace": false,
        "editor.wordWrap": "on",
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        },
        "editor.defaultFormatter": "yzhang.markdown-all-in-one"
    },
    "highlight.regexes": {
        "(Warning)(:)(.*)": [
            {
                "color": "pink",
                "backgroundColor": ""
            },
            {},
            {
                "color": "red"
            }
        ],
        "(\\[.+?\\])": [
            {
                "color": "yellow"
            }
        ],
        "([#] ===== .+? =====)": [
            {
                "backgroundColor": "rgba(255,255,255, 0.2)"
            }
        ],
        "(===== )(.+?)( =====)": [
            {},
            {
                "color": "yellow",
                "fontWeight": "bold",
                "fontStyle": "italic"
            },
            {}
        ],
        "(\\<.+?\\>)": [
            {
                "color": "orange"
            }
        ],
        "(\".+?\")": [
            {
                "color": "orange"
            }
        ],
        "('.+?')": [
            {
                "color": "orange"
            }
        ],
        "(`.+?`)": [
            {
                "color": "orange"
            }
        ],
        "(TODO)(.*)": [
            {
                "color": "white"
            },
            {}
        ],
        "(NOTE)(:)(.*)": [
            {
                "color": "yellow"
            },
            {},
            {}
        ],
        "(BUG|FIX|FIXME|ISSUE)(:)": [
            {
                "color": "red"
            },
            {}
        ],
        "(\\?\\?\\?)": [
            {
                "color": "red"
            }
        ],
        "(\\@)([a-zA-Z0-9-_\\.\\[\\]\\{\\}\\(\\)]+)": [
            {
                "color": "Gray",
            },
            {
                "color": "Lime",
            }
        ],
    },
    // "todo.embedded.regex": "(?:<!-- *)?(?:#|// @|//|/\\*+|<!--|--|\\* @|\\{!|\\{\\{!--|\\{\\{!) *(\\[Variant\\]|\\[Pattern\\]|\\[Notice\\]|TODO|FIXME|FIX|BUG|NOTE|REVIEW)(?:\\s*\\([^)]+\\))?:?(?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|\\{!|\\{\\{!--|\\{\\{!))|((?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|\\{!|\\{\\{!--|\\{\\{!))|(?: +[^@\\n]+)?))", // Regex used for finding embedded todos, requires double escaping
    "todo.embedded.regex": "(\\[Variant\\]|\\[Pattern\\]|\\[Notice\\]|TODO|FIXME|\\[FIX\\]|\\[BUG\\]|\\[NOTE\\]|\\[REVIEW\\|ISSUE]|\\[Deprecated\\]|\\?\\?\\?)(?:\\s*\\([^)]+\\))?:?(?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|\\{!|\\{\\{!--|\\{\\{!))|((?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|\\{!|\\{\\{!--|\\{\\{!))|(?: +[^@\\n]+)?))", // Regex used for finding embedded todos, requires double escaping
    "todo.file.include": [
        "**/*.todo",
        "**/*.task"
    ],
    "todo.embedded.exclude": [
        "**/.*",
        "**/.*/**",
        "**/_output/**",
        "**/bower_components/**",
        "**/build/**",
        "**/dist/**",
        "**/venv/**",
        "**/node_modules/**",
        "**/out/**",
        "**/output/**",
        "**/release/**",
        "**/releases/**",
        "**/static/**",
        "**/target/**",
        "**/third_party/**",
        "**/vendor/**",
        "**/CHANGELOG",
        "**/CHANGELOG.*",
        "**/*.min.*",
        "**/*.map",
        "**/*.{3ds,3g2,3gp,7z,a,aac,adp,ai,aif,aiff,alz,ape,apk,ar,arj,asf,au,avi,bak,baml,bh,bin,bk,bmp,btif,bz2,bzip2,cab,caf,cgm,class,cmx,cpio,cr2,csv,cur,dat,dcm,deb,dex,djvu,dll,dmg,dng,doc,docm,docx,dot,dotm,dra,DS_Store,dsk,dts,dtshd,dvb,dwg,dxf,ecelp4800,ecelp7470,ecelp9600,egg,eol,eot,epub,exe,f4v,fbs,fh,fla,flac,fli,flv,fpx,fst,fvt,g3,gif,graffle,gz,gzip,h261,h263,h264,icns,ico,ief,img,ipa,iso,jar,jpeg,jpg,jpgv,jpm,jxr,key,ktx,lha,lib,lvp,lz,lzh,lzma,lzo,m3u,m4a,m4v,mar,mdi,mht,mid,midi,mj2,mka,mkv,mmr,mng,mobi,mov,movie,mp3,mp4,mp4a,mpeg,mpg,mpga,mxu,nef,npx,numbers,o,oga,ogg,ogv,otf,pages,pbm,pcx,pdb,pdf,pea,pgm,pic,png,pnm,pot,potm,potx,ppa,ppam,ppm,pps,ppsm,ppsx,ppt,pptm,pptx,psd,pya,pyc,pyo,pyv,qt,rar,ras,raw,resources,rgb,rip,rlc,rmf,rmvb,rtf,rz,s3m,s7z,scpt,sgi,shar,sil,sketch,slk,smv,so,sub,swf,tar,tbz,tbz2,tga,tgz,thmx,tif,tiff,tlz,ttc,ttf,txz,udf,uvh,uvi,uvm,uvp,uvs,uvu,viv,vob,war,wav,wax,wbmp,wdp,weba,webm,webp,whl,wim,wm,wma,wmv,wmx,woff,woff2,wvx,xbm,xif,xla,xlam,xls,xlsb,xlsm,xlsx,xlt,xltm,xltx,xm,xmind,xpi,xpm,xwd,xz,z,zip,zipx}",
        "**/config/bin/**",
        "**/config/go/**"
    ],
    "todo.file.exclude": [
        "**/.!(todo|todos|task|tasks)/**",
        "**/_output/**",
        "**/bower_components/**",
        "**/build/**",
        "**/dist/**",
        "**/venv/**",
        "**/node_modules/**",
        "**/out/**",
        "**/output/**",
        "**/release/**",
        "**/releases/**",
        "**/static/**",
        "**/target/**",
        "**/third_party/**",
        "**/vendor/**",
        "**/config/bin/**",
        "**/config/go/**"
    ],
    // [html]
    "html.format.enable": true,
    // [yaml]
    "[yaml]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 4,
        "editor.autoIndent": "advanced",
        "editor.quickSuggestions": {
            "other": true,
            "comments": false,
            "strings": true
        }
    },
    "[jsonc]": {
        "editor.quickSuggestions": {
            "strings": true
        },
        "editor.suggest.insertMode": "replace"
    },
    "debug.javascript.autoAttachFilter": "disabled",
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "githubIssues.queries": [
        {
            "label": "My Issues",
            "query": "default"
        },
        {
            "label": "Created Issues",
            "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
            "label": "Recent Issues",
            "query": "state:open repo:${owner}/${repository} sort:updated-desc"
        }
    ],
    "editor.copyWithSyntaxHighlighting": false,
    // [SQL]
    "sqltools.format": {
        "language": "sql",
        "linesBetweenQueries": 2,
        "reservedWordCase": "upper"
    },
    // [New]
    "gallery.extensions.recommendations": false,
    "security.workspace.trust.untrustedFiles": "open",
    "window.openFoldersInNewWindow": "on",
    "git.openRepositoryInParentFolders": "never",
    "cmake.configureOnOpen": true,
    "redhat.telemetry.enabled": false,
    "diffEditor.renderSideBySide": false,
    "extensions.supportUntrustedWorkspaces": {
        "byted-ide.dev-environment-manager": {
            "supported": true
        }
    },
    "remote.SSH.defaultExtensions": [
        "byted-ide.gallery"
    ],
    "githubPullRequests.queries": [
        {
            "label": "Waiting For My Review",
            "query": "is:open review-requested:${user}"
        },
        {
            "label": "Assigned To Me",
            "query": "is:open assignee:${user}"
        },
        {
            "label": "Created By Me",
            "query": "is:open author:${user}"
        }
    ],
    "githubPullRequests.pushBranch": "always",
}