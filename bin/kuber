#!/bin/bash
# you need to get kubectl first that build by kubernets cluster

mode=$1

type kubectl > /dev/null
[ "$?" != "0" ] && echo "kubectl is not existed" && exit 1



current_namespace=`kubectl config view | grep current-context | awk '{print $2}'`




get(){
    if [ "$#" == "0" ] || [ "$1" == "-h" ]; then
        echo "Usage: kuber get [rc|po|se|secret|node|serviceaccount|namespace|event]"
        exit 0;
    fi
    echo "=============== $1 ==============="
    kubectl get $1
}

status(){
    get rc
    get po
    get se
    get secret
    get node
    get serviceaccount
    get namespace
    get event
    exit 0
}

change_server(){
    echo "please execute below:export KUBECONFIG=<config file>"
}


usage(){
    echo "[Usage]:kuber [get|status|change_server]"    
 
    echo "[yaml syntax]: ref to https://github.com/BizShuk/code_sandbox/tree/master/kubernetes"   
}

case $mode in
    usage)          usage                   ;;
    get)            get "${@:2}"            ;;
    status)         status                  ;;
    change_server)  change_server "${@:2}"  ;;
    *)              kubectl "${@:1}"        ;;

esac



echo -e "\nCurrent Namespace: $current_namespace"



#undoc

#export KUBECONFIG="/usr/local/etc/config-droi"
#kubectl delete -f $WORKSPACE/lua_server_app_image/kube-app-se_rc.yaml || true
#kubectl create -f $WORKSPACE/lua_server_app_image/kube-app-se_rc.yaml
